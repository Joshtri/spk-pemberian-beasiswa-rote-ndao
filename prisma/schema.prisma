generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String          @id @default(dbgenerated("concat('usr_', gen_random_uuid())")) @db.VarChar(40)
  username      String          @unique
  password      String
  email         String          @unique
  role          Role            @default(ADMIN)
  calonPenerima CalonPenerima[]

  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  Notifikasi Notifikasi[]
}

model CalonPenerima {
  id               String  @id @default(dbgenerated("concat('cln_', gen_random_uuid())")) @db.VarChar(40)
  userId           String?
  nama_lengkap     String
  alamat           String
  tanggal_lahir    String
  rt_rw            String
  kelurahan_desa   String
  kecamatan        String
  perguruan_Tinggi String
  fakultas_prodi   String
  noRekening       String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user             User?              @relation(fields: [userId], references: [id])
  penilaian        Penilaian[]
  hasilPerhitungan HasilPerhitungan[]
}

model Kriteria {
  id             String       @id @default(dbgenerated("concat('krt_', gen_random_uuid())")) @db.VarChar(40)
  nama_kriteria  String
  bobot_kriteria Float
  tipe_kriteria  TipeKriteria
  keterangan     String?

  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  subKriteria SubKriteria[]
  Penilaian   Penilaian[]
}

model SubKriteria {
  id                 String @id @default(dbgenerated("concat('skr_', gen_random_uuid())")) @db.VarChar(40)
  kriteriaId         String
  nama_sub_kriteria  String
  bobot_sub_kriteria Float

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  kriteria  Kriteria    @relation(fields: [kriteriaId], references: [id], onDelete: Cascade)
  Penilaian Penilaian[]
}

model Penilaian {
  id               String           @id @default(dbgenerated("concat('pnl_', gen_random_uuid())")) @db.VarChar(40)
  calonPenerimaId  String
  sub_kriteriaId   String
  kriteriaId       String
  periodeId        String
  verifikasiStatus VerifikasiStatus @default(PENDING)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  calonPenerima CalonPenerima      @relation(fields: [calonPenerimaId], references: [id], onDelete: Cascade)
  periode       Periode            @relation(fields: [periodeId], references: [id], onDelete: Cascade)
  subKriteria   SubKriteria        @relation(fields: [sub_kriteriaId], references: [id], onDelete: Cascade)
  kriteria      Kriteria           @relation(fields: [kriteriaId], references: [id], onDelete: Cascade)
  dokumen       DokumenPenilaian[]
}

model DokumenPenilaian {
  id           String      @id @default(dbgenerated("concat('dpn_', gen_random_uuid())")) @db.VarChar(40)
  penilaianId  String
  tipe_dokumen TipeDokumen
  fileUrl      String
  keterangan   String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  penilaian Penilaian @relation(fields: [penilaianId], references: [id], onDelete: Cascade)
}

model HasilPerhitungan {
  id                String  @id @default(dbgenerated("concat('hsl_', gen_random_uuid())")) @db.VarChar(40)
  calonPenerimaId   String
  nilai_akhir       Decimal @db.Decimal(10, 4)
  periodeId         String
  status            String
  rangking          Int
  ditampilkanKeUser Boolean @default(false) // <--- Tambahan ini

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  calonPenerima CalonPenerima @relation(fields: [calonPenerimaId], references: [id], onDelete: Cascade)
  periode       Periode       @relation(fields: [periodeId], references: [id], onDelete: Cascade)
}

model Periode {
  id              String   @id @default(dbgenerated("concat('prd_', gen_random_uuid())")) @db.VarChar(40)
  nama_periode    String
  tanggal_mulai   DateTime
  tanggal_selesai DateTime

  isActived        Boolean            @default(false)
  Penilaian        Penilaian[]
  HasilPerhitungan HasilPerhitungan[]

  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  JadwalPendaftaran JadwalPendaftaran?
}

model JadwalPendaftaran {
  id                  String   @id @default(dbgenerated("concat('jdw_', gen_random_uuid())")) @db.VarChar(40)
  periodeId           String   @unique
  pembukaan           DateTime
  batas_akhir         DateTime
  seleksi_mulai       DateTime
  seleksi_selesai     DateTime
  pengumuman_penerima DateTime

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  periode Periode @relation(fields: [periodeId], references: [id], onDelete: Cascade)
}

enum Role {
  ADMIN
  KEPALA_BIDANG
  CALON_PENERIMA
}

enum TipeKriteria {
  BENEFIT
  COST
}

enum TipeDokumen {
  KHS
  KRS
  UKT
  PRESTASI
}

model Notifikasi {
  id     String  @id @default(dbgenerated("concat('ntf_', gen_random_uuid())")) @db.VarChar(40)
  userId String
  judul  String
  isi    String
  dibaca Boolean @default(false)

  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum VerifikasiStatus {
  PENDING // Belum diverifikasi oleh admin
  DITERIMA // Disetujui dan bisa masuk ke perhitungan
  DITOLAK // Ditolak karena alasan tertentu (misal data tidak lengkap)
}
